{
  "ruby.intellisense": "rubyLocate",
  // The number of spaces a tab is equal to. This setting is overridden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.tabSize": 2,
  // Insert spaces when pressing Tab. This setting is overriden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.insertSpaces": true,
  // When opening a file, `editor.tabSize` and `editor.insertSpaces`
  // will be detected based on the file contents. Set to false to keep
  // the values you've explicitly set, above.
  "editor.detectIndentation": false,
  "breadcrumbs.enabled": true,
  "diffEditor.ignoreTrimWhitespace": true,
  "window.menuBarVisibility": "default",
  "editor.renderWhitespace": "none",
  "editor.renderControlCharacters": false,
  "editor.rulers": [
    80
  ],
  "powermode.enabled": true,
  "powermode.enableShake": false,
  "editor.find.seedSearchStringFromSelection": false,
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    // @FAST_SEARCH
    {
      "before": [
        "f",
      ],
      "after": [
        "*"
      ]
    },
    {
      "before": [
        "x",
      ],
      "commands": [
        ":nohl"
      ]
    },
    // @HIGHLIGHT
    {
      "before": [
        "x",
      ],
      "commands": [
        ":nohl"
      ]
    },
    // @EASYMOTION
    {
      "before": [
        "<leader>",
        "e"
      ],
      "after": [
        "leader",
        "leader",
        "w"
      ]
    },
    {
      "before": [
        "<leader>",
        "j"
      ],
      "after": [
        "leader",
        "leader",
        "j"
      ]
    },
    {
      "before": [
        "<leader>",
        "k"
      ],
      "after": [
        "leader",
        "leader",
        "k"
      ]
    },
    // @SAVE_AND_QUIT
    {
      "before": [
        "<leader>",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<space>",
        "q"
      ],
      "commands": [
        ":q",
      ]
    },
    // @EXPLORER
    {
      "before": [
        "<TAB>",
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility",
      ]
    },
    // @COMMENTS
    {
      "before": [
        "<leader>",
        "c",
        "<leader>"
      ],
      "commands": [
        "editor.action.commentLine",
      ],
    },
    // @LINE_MOTIONS
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    // @AUTOIDENT
    {
      "before": [
        "="
      ],
      "after": [],
      "commands": [
        {
          "command": "editor.action.reindentlines",
          "args": []
        }
      ]
    },
    // @EASYMOTION
    {
      "before": [
        "<leader>",
        "e"
      ],
      "after": [
        "leader",
        "leader",
        "w"
      ]
    },
    {
      "before": [
        "<leader>",
        "j"
      ],
      "after": [
        "leader",
        "leader",
        "j"
      ]
    },
    {
      "before": [
        "<leader>",
        "k"
      ],
      "after": [
        "leader",
        "leader",
        "k"
      ]
    },
    // @LINE_MOTIONS
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    },
    // @COMMENTS
    {
      "before": [
        "<leader>",
        "c",
        "<leader>",
      ],
      "commands": [
        "editor.action.commentLine",
        "extension.vim_escape"
      ],
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": false,
  "vim.useCtrlKeys": false,
  "vim.handleKeys": {
    "<C-f>": false,
    "<C-r>": true,
    "<C-o>": true,
    "<C-u>": true,
    "<C-d>": true,
    "<C-a>": false
  },
  "vim.hlsearch": true,
  "editor.minimap.enabled": false,
  "terminal.integrated.fontSize": 15,
  "tws.trimOnSave": true,
  "git.enableSmartCommit": true,
  "workbench.colorTheme": "One Monokai Shadow",
  "editor.fontFamily": "'monospace'",
  "terminal.integrated.fontFamily": "monospace",
  "editor.fontSize": 15,
  "workbench.iconTheme": "file-icons",
  "workbench.colorCustomizations": {
    "editorBracketHighlight.foreground1": "#fff",
    "editorBracketHighlight.foreground2": "#fff",
    "editorBracketHighlight.unexpectedBracket.foreground": "#fff",
    "editorCursor.foreground": "#fff",
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "entity.name.function",
        "settings": {
          "foreground": "#c8cdf7",
        },
      },
      {
        "scope": "entity.other.inherited-class",
        "settings": {
          "foreground": "#baeafd",
          "fontStyle": "italic"
        },
      },
      {
        "scope": "entity.other.attribute-name",
        "settings": {
          "foreground": "#c8cdf7",
        },
      },
      {
        "scope": "entity.name.type",
        "settings": {
          "foreground": "#baeafd",
          "fontStyle": "italic"
        },
      },
      {
        "scope": "support.function",
        "settings": {
          "foreground": "#eee",
        },
      },
      {
        "scope": "source.ruby",
        "settings": {
          "foreground": "#eee",
        },
      },
      {
        "scope": "variable.other.constant",
        "settings": {
          "foreground": "#baeafd",
          "fontStyle": "italic"
        },
      },
      {
        "scope": "variable.other.object",
        "settings": {
          "foreground": "#a38181",
        },
      },
      {
        "scope": "variable.other.readwrite",
        "settings": {
          "foreground": "#eee",
          "fontStyle": "bold"
        },
      },
      {
        "scope": "variable.parameter",
        "settings": {
          "foreground": "#eee",
        },
      },
      {
        "scope": "support.class",
        "settings": {
          "foreground": "#baeafd",
          "fontStyle": "italic"
        },
      },
      {
        "scope": "string",
        "settings": {
          "foreground": "#fffae2",
        },
      },
      {
        "scope": "constant.language",
        "settings": {
          "foreground": "#a38181",
        },
      },
      {
        "scope": "constant.numeric",
        "settings": {
          "foreground": "#a38181",
        },
      },
      {
        "scope": "keyword.control",
        "settings": {
          "fontStyle": "bold",
        },
      },
      {
        "scope": "keyword.other",
        "settings": {
          "fontStyle": "bold",
        },
      },
      {
        "scope": "keyword.operator",
        "settings": {
          "foreground": "#eee",
        },
      },
      {
        "scope": "punctuation.section.embedded",
        "settings": {
          "foreground": "#be6262",
        },
      },
    ]
  }
}
